#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:mysql}:3306/trade_db
#spring.datasource.username=${MYSQL_USER}
#spring.datasource.password=${MYSQL_PASSWORD}

#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=root
#spring.data.mongodb.password=root
spring.data.mongodb.uri=mongodb://${MONGODB_HOST}:27017/trade_db?authSource=admin
spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.uri=mongodb://admin:password@mongodb:27017/trade_db
#spring.data.mongodb.database=trade_db
#spring.data.mongodb.port=27017
#spring.data.mongodb.host=${MONGODB_HOST}


kafka.bootstrap.host=${KAFKA_BOOTSTRAP}
kafka.tick.data.topic=${TICK_DATA_TOPIC}

# Log JPA queries
# Comment this in production
#spring.jpa.show-sql=true

# Drop and create new tables (create, create-drop, validate, update)
# Only for testing purpose - comment this in production
#spring.jpa.hibernate.ddl-auto=create

# Hibernate SQL dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

server.port=8444
http.port=8080

server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/authenticator1
server.ssl.key-store-password=password
server.ssl.key=authenticator1

trust.store=classpath:keystore/authenticator1
trust.store.password=password

security.require-ssl=true
security.basic.enabled=false

